{
  "openapi": "3.1.0",
  "info": {
    "title": "PM AI MVP API",
    "description": "\n    ## PM AI MVP - Sistema de Gestão de Projetos com IA\n    \n    API completa para gestão de projetos com funcionalidades avançadas de IA.\n    \n    ### Funcionalidades Principais:\n    \n    * **Autenticação**: Sistema de autenticação OAuth com Google\n    * **Projetos**: Gestão completa de projetos e portfólios\n    * **Equipes**: Gestão de membros da equipe e funções\n    * **Clientes**: Gestão de clientes e níveis de comunicação\n    * **Riscos**: Análise e gestão de riscos com IA\n    * **Checklists**: Sistema de checklists para projetos\n    * **Action Items**: Gestão de itens de ação e tarefas\n    \n    ### Arquitetura:\n    \n    * **Services Layer**: Lógica de negócio separada dos controllers\n    * **Repository Pattern**: Camada de abstração para acesso a dados\n    * **Cache Redis**: Sistema de cache para performance\n    * **Processamento Assíncrono**: Tarefas em background com Celery\n    * **IA Integration**: Integração com Gemini API para análise de riscos\n    \n    ### Tecnologias:\n    \n    * **FastAPI**: Framework web moderno e rápido\n    * **SQLAlchemy**: ORM robusto com suporte assíncrono\n    * **PostgreSQL**: Banco de dados relacional\n    * **Redis**: Sistema de cache\n    * **Celery**: Processamento assíncrono\n    * **Pydantic**: Validação de dados\n    ",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/auth/google/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Google Login",
        "operationId": "google_login_api_v1_auth_google_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "List Projects",
        "description": "Lista projetos com filtros opcionais",
        "operationId": "list_projects_api_v1_projects__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "municipio",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Municipio"
            }
          },
          {
            "name": "portfolio",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Portfolio"
            }
          },
          {
            "name": "vertical",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertical"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProjectStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "gerente_projeto_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Gerente Projeto Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectOut"
                  },
                  "title": "Response List Projects Api V1 Projects  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Project",
        "description": "Cria um novo projeto",
        "operationId": "create_project_api_v1_projects__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/metrics": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project Metrics",
        "description": "Retorna métricas agregadas do portfólio",
        "operationId": "get_project_metrics_api_v1_projects_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project",
        "description": "Retorna um projeto específico",
        "operationId": "get_project_api_v1_projects__project_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Delete Project",
        "description": "Remove um projeto e seus relacionamentos em cascata",
        "operationId": "delete_project_api_v1_projects__project_id__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Update Project",
        "description": "Atualiza um projeto existente",
        "operationId": "update_project_api_v1_projects__project_id__put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/tasks": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "List Project Tasks",
        "description": "Lista tarefas de um projeto",
        "operationId": "list_project_tasks_api_v1_projects__project_id__tasks_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectTaskOut"
                  },
                  "title": "Response List Project Tasks Api V1 Projects  Project Id  Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Project Task",
        "description": "Cria uma nova tarefa para um projeto",
        "operationId": "create_project_task_api_v1_projects__project_id__tasks_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTaskIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTaskOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/implantadores": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "List Project Implantadores",
        "description": "Lista implantadores de um projeto",
        "operationId": "list_project_implantadores_api_v1_projects__project_id__implantadores_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectImplantadorOut"
                  },
                  "title": "Response List Project Implantadores Api V1 Projects  Project Id  Implantadores Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Add Project Implantador",
        "description": "Adiciona um implantador a um projeto",
        "operationId": "add_project_implantador_api_v1_projects__project_id__implantadores_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectImplantadorIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectImplantadorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{project_id}/migradores": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "List Project Migradores",
        "description": "Lista migradores de um projeto",
        "operationId": "list_project_migradores_api_v1_projects__project_id__migradores_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectMigradorOut"
                  },
                  "title": "Response List Project Migradores Api V1 Projects  Project Id  Migradores Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Add Project Migrador",
        "description": "Adiciona um migrador a um projeto",
        "operationId": "add_project_migrador_api_v1_projects__project_id__migradores_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectMigradorIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMigradorOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/checklists": {
      "get": {
        "tags": [
          "checklists"
        ],
        "summary": "List Checklists",
        "operationId": "list_checklists_api_v1_checklists_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChecklistGroupOut"
                  },
                  "type": "array",
                  "title": "Response List Checklists Api V1 Checklists Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "checklists"
        ],
        "summary": "Create Checklist",
        "operationId": "create_checklist_api_v1_checklists_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChecklistGroupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecklistGroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/checklists/{checklist_id}": {
      "get": {
        "tags": [
          "checklists"
        ],
        "summary": "Get Checklist",
        "operationId": "get_checklist_api_v1_checklists__checklist_id__get",
        "parameters": [
          {
            "name": "checklist_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Checklist Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChecklistGroupOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/action-items": {
      "get": {
        "tags": [
          "action-items"
        ],
        "summary": "List Action Items",
        "operationId": "list_action_items_api_v1_action_items_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActionItemOut"
                  },
                  "type": "array",
                  "title": "Response List Action Items Api V1 Action Items Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "action-items"
        ],
        "summary": "Create Action Item",
        "operationId": "create_action_item_api_v1_action_items_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionItemIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionItemOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/action-items/{action_item_id}": {
      "get": {
        "tags": [
          "action-items"
        ],
        "summary": "Get Action Item",
        "operationId": "get_action_item_api_v1_action_items__action_item_id__get",
        "parameters": [
          {
            "name": "action_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Action Item Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionItemOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portfolios/portfolios/": {
      "post": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Criar novo portfólio",
        "description": "Cria um novo portfólio para o usuário autenticado.\n    \n    **Validações:**\n    - Nome do portfólio é obrigatório e único por usuário\n    - Usuário deve estar autenticado\n    - Descrição é opcional\n    \n    **Retorna:**\n    - Portfólio criado com ID gerado automaticamente\n    - Timestamps de criação e atualização",
        "operationId": "create_portfolio_api_v1_portfolios_portfolios__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortfolioCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portfolio"
                }
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Listar portfólios do usuário",
        "description": "Lista todos os portfólios do usuário autenticado.\n    \n    **Parâmetros:**\n    - include_inactive: Se deve incluir portfólios inativos (padrão: False)\n    \n    **Retorna:**\n    - Lista de portfólios com informações resumidas\n    - Contagem de projetos por portfólio\n    - Status de ativação",
        "operationId": "get_portfolios_api_v1_portfolios_portfolios__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Incluir portfólios inativos",
              "default": false,
              "title": "Include Inactive"
            },
            "description": "Incluir portfólios inativos"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PortfolioSummary"
                  },
                  "title": "Response Get Portfolios Api V1 Portfolios Portfolios  Get"
                }
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portfolios/portfolios/{portfolio_id}": {
      "get": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Buscar portfólio por ID",
        "description": "Busca um portfólio específico por ID.\n    \n    **Validações:**\n    - Portfólio deve existir\n    - Usuário deve ter permissão para acessar o portfólio\n    \n    **Retorna:**\n    - Dados completos do portfólio\n    - Timestamps de criação e atualização",
        "operationId": "get_portfolio_api_v1_portfolios_portfolios__portfolio_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portfolio"
                }
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Atualizar portfólio",
        "description": "Atualiza um portfólio existente.\n    \n    **Validações:**\n    - Portfólio deve existir\n    - Usuário deve ter permissão para atualizar o portfólio\n    - Nome deve ser único por usuário (se alterado)\n    \n    **Retorna:**\n    - Portfólio atualizado com novos dados\n    - Timestamp de atualização modificado",
        "operationId": "update_portfolio_api_v1_portfolios_portfolios__portfolio_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PortfolioUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portfolio"
                }
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Excluir portfólio",
        "description": "Exclui um portfólio permanentemente.\n    \n    **Validações:**\n    - Portfólio deve existir\n    - Usuário deve ter permissão para excluir o portfólio\n    \n    **Atenção:**\n    - Esta operação é irreversível\n    - Todos os projetos do portfólio serão afetados",
        "operationId": "delete_portfolio_api_v1_portfolios_portfolios__portfolio_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portfolios/portfolios/{portfolio_id}/statistics": {
      "get": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Obter estatísticas do portfólio",
        "description": "Obtém estatísticas detalhadas de um portfólio.\n    \n    **Retorna:**\n    - Total de projetos\n    - Projetos ativos e inativos\n    - Status do portfólio\n    - Timestamps de criação e atualização\n    \n    **Validações:**\n    - Portfólio deve existir\n    - Usuário deve ter permissão para acessar o portfólio",
        "operationId": "get_portfolio_statistics_api_v1_portfolios_portfolios__portfolio_id__statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portfolios/portfolios/{portfolio_id}/activate": {
      "post": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Ativar portfólio",
        "description": "Ativa um portfólio inativo.\n    \n    **Validações:**\n    - Portfólio deve existir\n    - Usuário deve ter permissão para ativar o portfólio\n    \n    **Retorna:**\n    - Portfólio ativado com status atualizado",
        "operationId": "activate_portfolio_api_v1_portfolios_portfolios__portfolio_id__activate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portfolio"
                }
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/portfolios/portfolios/{portfolio_id}/deactivate": {
      "post": {
        "tags": [
          "portfolios",
          "portfolios"
        ],
        "summary": "Desativar portfólio",
        "description": "Desativa um portfólio ativo.\n    \n    **Validações:**\n    - Portfólio deve existir\n    - Usuário deve ter permissão para desativar o portfólio\n    \n    **Retorna:**\n    - Portfólio desativado com status atualizado",
        "operationId": "deactivate_portfolio_api_v1_portfolios_portfolios__portfolio_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Portfolio"
                }
              }
            }
          },
          "404": {
            "description": "Portfólio não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team-members/": {
      "post": {
        "tags": [
          "team-members"
        ],
        "summary": "Create Team Member",
        "description": "Create a new team member.",
        "operationId": "create_team_member_api_v1_team_members__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMemberCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "team-members"
        ],
        "summary": "Get Team Members",
        "description": "Get all team members for a project.",
        "operationId": "get_team_members_api_v1_team_members__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          },
          {
            "name": "role_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by role",
              "title": "Role Filter"
            },
            "description": "Filter by role"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMemberResponse"
                  },
                  "title": "Response Get Team Members Api V1 Team Members  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team-members/{team_member_id}": {
      "get": {
        "tags": [
          "team-members"
        ],
        "summary": "Get Team Member",
        "description": "Get a specific team member by ID.",
        "operationId": "get_team_member_api_v1_team_members__team_member_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Member Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "team-members"
        ],
        "summary": "Update Team Member",
        "description": "Update a team member.",
        "operationId": "update_team_member_api_v1_team_members__team_member_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Member Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMemberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team-members"
        ],
        "summary": "Delete Team Member",
        "description": "Delete a team member.",
        "operationId": "delete_team_member_api_v1_team_members__team_member_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Member Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team-members/project/{project_id}/statistics": {
      "get": {
        "tags": [
          "team-members"
        ],
        "summary": "Get Team Statistics",
        "description": "Get team statistics for a project.",
        "operationId": "get_team_statistics_api_v1_team_members_project__project_id__statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team-members/project/{project_id}/by-role": {
      "get": {
        "tags": [
          "team-members"
        ],
        "summary": "Get Team Members By Role",
        "description": "Get team members grouped by role.",
        "operationId": "get_team_members_by_role_api_v1_team_members_project__project_id__by_role_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team-members/{team_member_id}/activate": {
      "post": {
        "tags": [
          "team-members"
        ],
        "summary": "Activate Team Member",
        "description": "Activate a team member.",
        "operationId": "activate_team_member_api_v1_team_members__team_member_id__activate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Member Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/team-members/{team_member_id}/deactivate": {
      "post": {
        "tags": [
          "team-members"
        ],
        "summary": "Deactivate Team Member",
        "description": "Deactivate a team member.",
        "operationId": "deactivate_team_member_api_v1_team_members__team_member_id__deactivate_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "team_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Team Member Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Create Client",
        "description": "Create a new client.",
        "operationId": "create_client_api_v1_clients__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Clients",
        "description": "Get all clients for a project.",
        "operationId": "get_clients_api_v1_clients__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          },
          {
            "name": "client_type_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by client type",
              "title": "Client Type Filter"
            },
            "description": "Filter by client type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  },
                  "title": "Response Get Clients Api V1 Clients  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client",
        "description": "Get a specific client by ID.",
        "operationId": "get_client_api_v1_clients__client_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client",
        "description": "Update a client.",
        "operationId": "update_client_api_v1_clients__client_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "clients"
        ],
        "summary": "Delete Client",
        "description": "Delete a client.",
        "operationId": "delete_client_api_v1_clients__client_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/project/{project_id}/statistics": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Client Statistics",
        "description": "Get client statistics for a project.",
        "operationId": "get_client_statistics_api_v1_clients_project__project_id__statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/update-satisfaction": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Update Client Satisfaction",
        "description": "Update client satisfaction score.",
        "operationId": "update_client_satisfaction_api_v1_clients__client_id__update_satisfaction_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          },
          {
            "name": "satisfaction_score",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "minimum": 1,
              "description": "Satisfaction score (1-10)",
              "title": "Satisfaction Score"
            },
            "description": "Satisfaction score (1-10)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/{client_id}/schedule-contact": {
      "post": {
        "tags": [
          "clients"
        ],
        "summary": "Schedule Client Contact",
        "description": "Schedule next client contact.",
        "operationId": "schedule_client_contact_api_v1_clients__client_id__schedule_contact_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "client_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Client Id"
            }
          },
          {
            "name": "next_contact_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Next contact date (YYYY-MM-DD)",
              "title": "Next Contact Date"
            },
            "description": "Next contact date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/clients/project/{project_id}/communication-plan": {
      "get": {
        "tags": [
          "clients"
        ],
        "summary": "Get Communication Plan",
        "description": "Get communication plan for project clients.",
        "operationId": "get_communication_plan_api_v1_clients_project__project_id__communication_plan_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/": {
      "post": {
        "tags": [
          "risks"
        ],
        "summary": "Create Risk",
        "description": "Create a new risk.",
        "operationId": "create_risk_api_v1_risks__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Get Risks",
        "description": "Get all risks for a project.",
        "operationId": "get_risks_api_v1_risks__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Project ID",
              "title": "Project Id"
            },
            "description": "Project ID"
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip",
              "default": 0,
              "title": "Skip"
            },
            "description": "Number of records to skip"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records to return"
          },
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status",
              "title": "Status Filter"
            },
            "description": "Filter by status"
          },
          {
            "name": "priority_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by priority",
              "title": "Priority Filter"
            },
            "description": "Filter by priority"
          },
          {
            "name": "category_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by category",
              "title": "Category Filter"
            },
            "description": "Filter by category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RiskResponse"
                  },
                  "title": "Response Get Risks Api V1 Risks  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/{risk_id}": {
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Get Risk",
        "description": "Get a specific risk by ID.",
        "operationId": "get_risk_api_v1_risks__risk_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Risk Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "risks"
        ],
        "summary": "Update Risk",
        "description": "Update a risk.",
        "operationId": "update_risk_api_v1_risks__risk_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Risk Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "risks"
        ],
        "summary": "Delete Risk",
        "description": "Delete a risk.",
        "operationId": "delete_risk_api_v1_risks__risk_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Risk Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/project/{project_id}/statistics": {
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Get Risk Statistics",
        "description": "Get risk statistics for a project.",
        "operationId": "get_risk_statistics_api_v1_risks_project__project_id__statistics_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/project/{project_id}/high-priority": {
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Get High Priority Risks",
        "description": "Get high priority risks for a project.",
        "operationId": "get_high_priority_risks_api_v1_risks_project__project_id__high_priority_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/project/{project_id}/overdue-reviews": {
      "get": {
        "tags": [
          "risks"
        ],
        "summary": "Get Overdue Reviews",
        "description": "Get risks with overdue reviews.",
        "operationId": "get_overdue_reviews_api_v1_risks_project__project_id__overdue_reviews_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/{risk_id}/update-status": {
      "post": {
        "tags": [
          "risks"
        ],
        "summary": "Update Risk Status",
        "description": "Update risk status.",
        "operationId": "update_risk_status_api_v1_risks__risk_id__update_status_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Risk Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "New risk status",
              "title": "Status"
            },
            "description": "New risk status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/{risk_id}/ai-analysis": {
      "post": {
        "tags": [
          "risks"
        ],
        "summary": "Generate Ai Analysis",
        "description": "Generate AI analysis for a risk.",
        "operationId": "generate_ai_analysis_api_v1_risks__risk_id__ai_analysis_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Risk Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risks/{risk_id}/schedule-review": {
      "post": {
        "tags": [
          "risks"
        ],
        "summary": "Schedule Risk Review",
        "description": "Schedule next risk review.",
        "operationId": "schedule_risk_review_api_v1_risks__risk_id__schedule_review_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "risk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Risk Id"
            }
          },
          {
            "name": "next_review_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Next review date (YYYY-MM-DD)",
              "title": "Next Review Date"
            },
            "description": "Next review date (YYYY-MM-DD)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analytics/portfolio/{portfolio_id}/dashboard": {
      "get": {
        "tags": [
          "analytics",
          "analytics"
        ],
        "summary": "Dashboard do Portfólio",
        "description": "Obtém dashboard completo de um portfólio com:\n    - Estatísticas gerais\n    - Projetos recentes\n    - Riscos críticos\n    - Tendências",
        "operationId": "get_portfolio_dashboard_api_v1_analytics_analytics_portfolio__portfolio_id__dashboard_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Portfolio Dashboard Api V1 Analytics Analytics Portfolio  Portfolio Id  Dashboard Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analytics/project/{project_id}/health-score": {
      "get": {
        "tags": [
          "analytics",
          "analytics"
        ],
        "summary": "Score de Saúde do Projeto",
        "description": "Calcula score de saúde de um projeto baseado em:\n    - Cronograma\n    - Orçamento\n    - Riscos\n    - Equipe\n    - Cliente",
        "operationId": "get_project_health_score_api_v1_analytics_analytics_project__project_id__health_score_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Project Health Score Api V1 Analytics Analytics Project  Project Id  Health Score Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analytics/portfolio/{portfolio_id}/risk-heatmap": {
      "get": {
        "tags": [
          "analytics",
          "analytics"
        ],
        "summary": "Mapa de Calor de Riscos",
        "description": "Gera mapa de calor de riscos do portfólio com:\n    - Distribuição por categoria\n    - Pontuações de risco\n    - Estatísticas por projeto",
        "operationId": "get_risk_heatmap_api_v1_analytics_analytics_portfolio__portfolio_id__risk_heatmap_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Risk Heatmap Api V1 Analytics Analytics Portfolio  Portfolio Id  Risk Heatmap Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analytics/project/{project_id}/team-performance": {
      "get": {
        "tags": [
          "analytics",
          "analytics"
        ],
        "summary": "Análise de Performance da Equipe",
        "description": "Analisa performance da equipe com:\n    - Métricas por função\n    - Diversidade de roles\n    - Status de atividade\n    - Recomendações",
        "operationId": "get_team_performance_analysis_api_v1_analytics_analytics_project__project_id__team_performance_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Team Performance Analysis Api V1 Analytics Analytics Project  Project Id  Team Performance Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analytics/project/{project_id}/client-satisfaction": {
      "get": {
        "tags": [
          "analytics",
          "analytics"
        ],
        "summary": "Relatório de Satisfação do Cliente",
        "description": "Gera relatório de satisfação do cliente com:\n    - Métricas de satisfação\n    - Análise por tipo de cliente\n    - Níveis de comunicação\n    - Recomendações",
        "operationId": "get_client_satisfaction_report_api_v1_analytics_analytics_project__project_id__client_satisfaction_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Client Satisfaction Report Api V1 Analytics Analytics Project  Project Id  Client Satisfaction Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analytics/analytics/portfolio/{portfolio_id}/summary": {
      "get": {
        "tags": [
          "analytics",
          "analytics"
        ],
        "summary": "Resumo Executivo do Portfólio",
        "description": "Obtém resumo executivo do portfólio com:\n    - Métricas consolidadas\n    - Indicadores-chave\n    - Alertas e recomendações",
        "operationId": "get_portfolio_summary_api_v1_analytics_analytics_portfolio__portfolio_id__summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "portfolio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Portfolio Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Portfolio Summary Api V1 Analytics Analytics Portfolio  Portfolio Id  Summary Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/security/security/events": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Listar Eventos de Segurança",
        "description": "Lista eventos de segurança recentes com filtros opcionais.\n    \n    **Parâmetros:**\n    - hours: Número de horas para buscar eventos (padrão: 24)\n    - severity: Filtrar por nível de severidade (low, medium, high, critical)\n    - threat_type: Filtrar por tipo de ameaça\n    - limit: Número máximo de eventos (padrão: 100)",
        "operationId": "get_security_events_api_v1_security_security_events_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Hours to look back",
              "default": 24,
              "title": "Hours"
            },
            "description": "Hours to look back"
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by severity level",
              "title": "Severity"
            },
            "description": "Filter by severity level"
          },
          {
            "name": "threat_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by threat type",
              "title": "Threat Type"
            },
            "description": "Filter by threat type"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of events",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of events"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Get Security Events Api V1 Security Security Events Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/security/security/summary": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Resumo de Segurança",
        "description": "Obtém resumo estatístico de eventos de segurança.\n    \n    **Retorna:**\n    - Contadores de eventos por tipo e severidade\n    - IPs bloqueados\n    - Configurações de rate limiting\n    - Estatísticas de 24h e 7 dias",
        "operationId": "get_security_summary_api_v1_security_security_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Security Summary Api V1 Security Security Summary Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/security/security/blocked-ips": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Listar IPs Bloqueados",
        "description": "Lista todos os IPs atualmente bloqueados por ameaças de segurança.",
        "operationId": "get_blocked_ips_api_v1_security_security_blocked_ips_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Blocked Ips Api V1 Security Security Blocked Ips Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/security/security/blocked-ips/{ip_address}": {
      "post": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Bloquear IP",
        "description": "Bloqueia um IP específico por ameaças de segurança.\n    \n    **Parâmetros:**\n    - ip_address: Endereço IP para bloquear",
        "operationId": "block_ip_api_v1_security_security_blocked_ips__ip_address__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Block Ip Api V1 Security Security Blocked Ips  Ip Address  Post"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Desbloquear IP",
        "description": "Remove o bloqueio de um IP específico.\n    \n    **Parâmetros:**\n    - ip_address: Endereço IP para desbloquear",
        "operationId": "unblock_ip_api_v1_security_security_blocked_ips__ip_address__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "ip_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ip Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Unblock Ip Api V1 Security Security Blocked Ips  Ip Address  Delete"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/security/security/rate-limits": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Status dos Rate Limits",
        "description": "Obtém status atual dos rate limits para diferentes tipos de endpoint.",
        "operationId": "get_rate_limits_status_api_v1_security_security_rate_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Rate Limits Status Api V1 Security Security Rate Limits Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/security/security/password-strength": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Validar Força da Senha",
        "description": "Valida a força de uma senha sem armazená-la.\n    \n    **Parâmetros:**\n    - password: Senha para validar",
        "operationId": "validate_password_strength_api_v1_security_security_password_strength_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Password to validate",
              "title": "Password"
            },
            "description": "Password to validate"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Validate Password Strength Api V1 Security Security Password Strength Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/security/security/csrf-token": {
      "post": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Gerar Token CSRF",
        "description": "Gera um token CSRF para proteção contra ataques CSRF.",
        "operationId": "generate_csrf_token_api_v1_security_security_csrf_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Generate Csrf Token Api V1 Security Security Csrf Token Post"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/security/security/login-attempts/{identifier}": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Status de Tentativas de Login",
        "description": "Verifica o status de tentativas de login para um usuário ou IP.\n    \n    **Parâmetros:**\n    - identifier: ID do usuário ou endereço IP",
        "operationId": "get_login_attempts_status_api_v1_security_security_login_attempts__identifier__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Login Attempts Status Api V1 Security Security Login Attempts  Identifier  Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/security/security/cleanup": {
      "post": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Limpeza de Dados de Segurança",
        "description": "Executa limpeza de dados antigos de segurança.\n    \n    **Parâmetros:**\n    - events_days: Dias para manter eventos de segurança (padrão: 30)\n    - rate_limits_hours: Horas para manter dados de rate limit (padrão: 24)",
        "operationId": "cleanup_security_data_api_v1_security_security_cleanup_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "events_days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Days to keep security events",
              "default": 30,
              "title": "Events Days"
            },
            "description": "Days to keep security events"
          },
          {
            "name": "rate_limits_hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 168,
              "minimum": 1,
              "description": "Hours to keep rate limit data",
              "default": 24,
              "title": "Rate Limits Hours"
            },
            "description": "Hours to keep rate limit data"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Cleanup Security Data Api V1 Security Security Cleanup Post"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/security/security/health": {
      "get": {
        "tags": [
          "security",
          "security"
        ],
        "summary": "Health Check de Segurança",
        "description": "Verifica a saúde do sistema de segurança.",
        "operationId": "security_health_check_api_v1_security_security_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Security Health Check Api V1 Security Security Health Get"
                }
              }
            }
          },
          "404": {
            "description": "Recurso não encontrado"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Não autorizado"
          },
          "403": {
            "description": "Sem permissão"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "description": "Health check endpoint",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint with API information",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionItemIn": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "open"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          }
        },
        "type": "object",
        "required": [
          "title",
          "type",
          "project_id"
        ],
        "title": "ActionItemIn"
      },
      "ActionItemOut": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "default": "open"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "type",
          "project_id",
          "id",
          "created_at"
        ],
        "title": "ActionItemOut"
      },
      "ChecklistGroupIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id"
        ],
        "title": "ChecklistGroupIn"
      },
      "ChecklistGroupOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "id",
          "created_at"
        ],
        "title": "ChecklistGroupOut"
      },
      "ClientCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "communication_level": {
            "type": "string",
            "title": "Communication Level",
            "default": "standard"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id"
        ],
        "title": "ClientCreate"
      },
      "ClientResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "communication_level": {
            "type": "string",
            "title": "Communication Level",
            "default": "standard"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "project_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "ClientResponse"
      },
      "ClientUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "communication_level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Communication Level"
          }
        },
        "type": "object",
        "title": "ClientUpdate"
      },
      "GoogleLoginIn": {
        "properties": {
          "id_token": {
            "type": "string",
            "title": "Id Token"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id_token",
          "email",
          "name"
        ],
        "title": "GoogleLoginIn"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Portfolio": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "owner_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "Portfolio"
      },
      "PortfolioCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "owner_id"
        ],
        "title": "PortfolioCreate"
      },
      "PortfolioSummary": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_count": {
            "type": "integer",
            "title": "Project Count",
            "default": 0
          },
          "total_value": {
            "type": "number",
            "title": "Total Value",
            "default": 0.0
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "PortfolioSummary"
      },
      "PortfolioUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          }
        },
        "type": "object",
        "title": "PortfolioUpdate"
      },
      "ProjectImplantadorIn": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ProjectImplantadorIn"
      },
      "ProjectImplantadorOut": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "id",
          "project_id"
        ],
        "title": "ProjectImplantadorOut"
      },
      "ProjectIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do projeto"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "municipio": {
            "type": "string",
            "title": "Municipio",
            "description": "Cidade/município"
          },
          "entidade": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entidade"
          },
          "chamado_jira": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chamado Jira"
          },
          "portfolio_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Name"
          },
          "vertical": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vertical"
          },
          "product": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product"
          },
          "tipo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              }
            ],
            "default": "implantacao"
          },
          "data_inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data Inicio"
          },
          "data_fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data Fim"
          },
          "etapa_atual": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Etapa Atual"
          },
          "valor_implantacao": {
            "type": "number",
            "minimum": 0.0,
            "title": "Valor Implantacao",
            "default": 0.0
          },
          "valor_recorrente": {
            "type": "number",
            "minimum": 0.0,
            "title": "Valor Recorrente",
            "default": 0.0
          },
          "recursos": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Recursos",
            "default": 0
          },
          "gerente_projeto_id": {
            "type": "integer",
            "title": "Gerente Projeto Id"
          },
          "gerente_portfolio_id": {
            "type": "integer",
            "title": "Gerente Portfolio Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "municipio",
          "data_inicio",
          "data_fim",
          "gerente_projeto_id",
          "gerente_portfolio_id"
        ],
        "title": "ProjectIn"
      },
      "ProjectMetrics": {
        "properties": {
          "total_projects": {
            "type": "integer",
            "title": "Total Projects"
          },
          "total_implantation": {
            "type": "number",
            "title": "Total Implantation"
          },
          "total_recurring": {
            "type": "number",
            "title": "Total Recurring"
          },
          "total_resources": {
            "type": "integer",
            "title": "Total Resources"
          },
          "projects_by_status": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Projects By Status"
          },
          "projects_by_municipio": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Projects By Municipio"
          },
          "projects_by_portfolio": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Projects By Portfolio"
          }
        },
        "type": "object",
        "required": [
          "total_projects",
          "total_implantation",
          "total_recurring",
          "total_resources",
          "projects_by_status",
          "projects_by_municipio",
          "projects_by_portfolio"
        ],
        "title": "ProjectMetrics"
      },
      "ProjectMigradorIn": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ProjectMigradorIn"
      },
      "ProjectMigradorOut": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "id",
          "project_id"
        ],
        "title": "ProjectMigradorOut"
      },
      "ProjectOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Nome do projeto"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "municipio": {
            "type": "string",
            "title": "Municipio",
            "description": "Cidade/município"
          },
          "entidade": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entidade"
          },
          "chamado_jira": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chamado Jira"
          },
          "portfolio_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Name"
          },
          "vertical": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vertical"
          },
          "product": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product"
          },
          "tipo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              }
            ],
            "default": "implantacao"
          },
          "data_inicio": {
            "type": "string",
            "format": "date-time",
            "title": "Data Inicio"
          },
          "data_fim": {
            "type": "string",
            "format": "date-time",
            "title": "Data Fim"
          },
          "etapa_atual": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Etapa Atual"
          },
          "valor_implantacao": {
            "type": "number",
            "minimum": 0.0,
            "title": "Valor Implantacao",
            "default": 0.0
          },
          "valor_recorrente": {
            "type": "number",
            "minimum": 0.0,
            "title": "Valor Recorrente",
            "default": 0.0
          },
          "recursos": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Recursos",
            "default": 0
          },
          "gerente_projeto_id": {
            "type": "integer",
            "title": "Gerente Projeto Id"
          },
          "gerente_portfolio_id": {
            "type": "integer",
            "title": "Gerente Portfolio Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectStatus"
          },
          "owner_id": {
            "type": "integer",
            "title": "Owner Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "municipio",
          "data_inicio",
          "data_fim",
          "gerente_projeto_id",
          "gerente_portfolio_id",
          "id",
          "status",
          "owner_id",
          "created_at",
          "updated_at"
        ],
        "title": "ProjectOut"
      },
      "ProjectStatus": {
        "type": "string",
        "enum": [
          "not_started",
          "on_track",
          "warning",
          "delayed",
          "completed"
        ],
        "title": "ProjectStatus"
      },
      "ProjectTaskIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "not_started"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_date",
          "end_date"
        ],
        "title": "ProjectTaskIn"
      },
      "ProjectTaskOut": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "not_started"
          },
          "assignee_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignee Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "start_date",
          "end_date",
          "id",
          "project_id",
          "created_at"
        ],
        "title": "ProjectTaskOut"
      },
      "ProjectType": {
        "type": "string",
        "enum": [
          "implantacao",
          "migracao",
          "configuracao",
          "treinamento",
          "suporte"
        ],
        "title": "ProjectType"
      },
      "ProjectUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "municipio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Municipio"
          },
          "entidade": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entidade"
          },
          "chamado_jira": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chamado Jira"
          },
          "portfolio_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Portfolio Name"
          },
          "vertical": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vertical"
          },
          "product": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Product"
          },
          "tipo": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectType"
              },
              {
                "type": "null"
              }
            ]
          },
          "data_inicio": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Inicio"
          },
          "data_fim": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data Fim"
          },
          "etapa_atual": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Etapa Atual"
          },
          "valor_implantacao": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Valor Implantacao"
          },
          "valor_recorrente": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Valor Recorrente"
          },
          "recursos": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Recursos"
          },
          "gerente_projeto_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gerente Projeto Id"
          },
          "gerente_portfolio_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gerente Portfolio Id"
          }
        },
        "type": "object",
        "title": "ProjectUpdate"
      },
      "RiskCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "risk_level": {
            "type": "string",
            "title": "Risk Level",
            "default": "medium"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "open"
          },
          "mitigation_plan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mitigation Plan"
          }
        },
        "type": "object",
        "required": [
          "title",
          "project_id"
        ],
        "title": "RiskCreate"
      },
      "RiskResponse": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "risk_level": {
            "type": "string",
            "title": "Risk Level",
            "default": "medium"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "open"
          },
          "mitigation_plan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mitigation Plan"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "project_id",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "RiskResponse"
      },
      "RiskUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "risk_level": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Risk Level"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "mitigation_plan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mitigation Plan"
          }
        },
        "type": "object",
        "title": "RiskUpdate"
      },
      "TeamMemberCreate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "project_id",
          "role"
        ],
        "title": "TeamMemberCreate"
      },
      "TeamMemberResponse": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "project_id",
          "role",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "TeamMemberResponse"
      },
      "TeamMemberUpdate": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "TeamMemberUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}